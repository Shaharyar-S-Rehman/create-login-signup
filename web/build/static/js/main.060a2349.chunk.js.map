{"version":3,"sources":["core.js","components/login/login.jsx","components/signUp/signUp.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","validationSchema","yup","email","required","password","min","max","Login","history","useHistory","formik","useFormik","initialValues","onSubmit","values","console","log","axios","post","then","res","data","push","style","margin","textAlign","color","textDecoration","textDecorationColor","handleSubmit","Stack","spacing","TextField","fullWidth","id","label","variant","name","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","width","marginLeft","onClick","address","number","SignUp","App","Navbar","bg","expand","Container","Brand","href","fontWeight","Toggle","Collapse","Nav","className","Link","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.060a2349.chunk.js","sourcesContent":["const dev = \"http://localhost:5000\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import { useState, useEffect, useRef } from \"react\"\r\nimport axios from 'axios';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"./../../core\"\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .max(10, 'No more then 10')\r\n    .required('Password is required'),\r\n});\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    onSubmit: function (values) {\r\n      console.log(\"values: \", values)\r\n\r\n      axios.post(`${baseUrl}/api/v1/login`, {\r\n        email: values.email,\r\n        password: values.password,\r\n      })\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n\r\n          if (res.data.email) {\r\n            history.push(\"/\")\r\n          }\r\n\r\n\r\n        })\r\n\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div style={{ margin: \"0 20% 0 20%\" }}>\r\n      <br />\r\n      <h1 style={{ textAlign: \"center\", color: \"whitesmoke\", textDecoration: \"5px solid underline\", textDecorationColor: \"brown\" }}>Login</h1>\r\n      <br />\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Stack spacing={2}>\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"filled-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          /> \r\n          <div>\r\n            <Button style={{ width: \"20%\",}} variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n            <Button style={{ width: \"20%\", marginLeft:\"5px\" }} onClick={() => { history.push(\"/signup\") }} variant=\"contained\" color=\"primary\">I have no account</Button>\r\n          </div>\r\n        </Stack>\r\n\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","import { useState, useEffect, useRef } from \"react\"\r\nimport axios from 'axios';\r\nimport{  useHistory } from \"react-router-dom\";\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\nimport { baseUrl } from \"./../../core\"\r\n\r\nconst validationSchema = yup.object({\r\n    name: yup\r\n        .string('Enter your name')\r\n        .required('Name is required'),\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .max(10, 'No more then 10')\r\n        .required('Password is required'),\r\n    address: yup\r\n        .string('Enter your Address')\r\n        .min(10, 'Address should be of minimum 10 characters length')\r\n        .max(50, 'No more then 50')\r\n        .required('Address is required'),\r\n    number: yup\r\n        .number('Enter your Number')\r\n        // .min(11, 'Number should be of minimum 11 characters length')\r\n        // .max(20, 'No more then 15')\r\n        .required('Number is required'),\r\n});\r\n\r\nfunction SignUp() {\r\n    let history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            name: '',\r\n            address: '',\r\n            email: '',\r\n            password: '',\r\n            number: '',\r\n        },\r\n        onSubmit: function (values) {\r\n            axios.post(`${baseUrl}/api/v1/signup`, {\r\n                name: values.name,\r\n                address: values.address,\r\n                number: values.number,\r\n                email: values.email,\r\n                password: values.password,\r\n            })\r\n                .then((res) => {\r\n                    console.log(\"res: \", res.data);\r\n                })\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div style={{ margin: \"0 20% 0 20%\" }}>\r\n            <h1 style={{ textAlign: \"center\", color: \"whitesmoke\", textDecoration: \"5px solid underline\", textDecorationColor: \"brown\" }}>SignUp</h1>\r\n            <br />\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Stack spacing={2}>\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Full Name\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"name\"\r\n                        value={formik.values.name}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.name && Boolean(formik.errors.name)}\r\n                        helperText={formik.touched.name && formik.errors.name}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Address\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"address\"\r\n                        value={formik.values.address}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.address && Boolean(formik.errors.address)}\r\n                        helperText={formik.touched.address && formik.errors.address}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Number\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"number\"\r\n                        value={formik.values.number}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.number && Boolean(formik.errors.number)}\r\n                        helperText={formik.touched.number && formik.errors.number}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"outlined-basic\"\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n\r\n                        name=\"email\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        id=\"filled-basic\"\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n\r\n                        name=\"password\"\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange}\r\n\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                    />\r\n                    <br />\r\n                    <div>\r\n                        <Button style={{ width: \"20%\", margin: 'auto' }} variant=\"contained\" color=\"primary\" type=\"submit\">Signup</Button>\r\n                        <Button style={{ width: \"20%\", marginLeft:\"5px\" }} onClick={() => { history.push(\"/login\") }} variant=\"contained\" color=\"primary\">I have an account</Button>\r\n          \r\n                    </div>\r\n                </Stack>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default SignUp;","import './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\n\n\n\nimport Login from \"./components/login/login\"\nimport Signup from \"./components/signUp/signUp\"\n// import Dashboard from \"./components/dashboard/index\"\n\n\nfunction App() {\n\n  let history = useHistory();\n\n  return (\n    <>\n      <Navbar bg=\"dark\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\" style={{color:\"white\",fontWeight:\"bolder\"}}>Registeration Form</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"m-auto\">\n              {/* <Nav.Link onClick={() => { history.push(\"/\") }}>Dashboard</Nav.Link> */}\n              <Nav.Link onClick={() => { history.push(\"/\") }} style={{color:\"white\",fontWeight:\"bolder\"}}>Signup</Nav.Link>\n\n              <Nav.Link onClick={() => { history.push(\"/login\") }} style={{color:\"white\",fontWeight:\"bolder\"}}>Login</Nav.Link>\n\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route path=\"/\">\n          <Signup />\n        </Route>\n{/* \n        <Route exact path=\"/\">\n          <Dashboard />\n        </Route> */}\n\n      </Switch>\n\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}